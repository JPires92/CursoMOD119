@using CursoMOD119.Lib;
@*@model PaginatedList<CursoMOD119.Models.Client>
*@
@model IEnumerable<CursoMOD119.Models.Client>

@{
    ViewData["Title"] = "Index";

    //Método sem o MVC grid
    //var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    //var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    //int pageNumber = Convert.ToInt32(ViewData["pageNumber"]);
}

<h2>@SharedLocalizer["Clients"]</h2>

<p>
    <h6 align="right"><a asp-action="Create" class="btn btn-dark">@SharedLocalizer["Create new"]</a></h6>
</p>

@*Método sem o MVC grid*@
@*<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            @SharedLocalizer["Find by name"]:
            <input type="text" name="searchName" value="@ViewData["SearchName"]" />
            <input type="submit" value="@SharedLocalizer["Search"]" class="btn btn-primary" /> |
            <a asp-action="Index" class="btn btn-secondary">@SharedLocalizer["Return to Full List"]</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sort="@ViewData["NameSort"]"
                   asp-route-searchName="@ViewData["SearchName"]"> @Html.DisplayNameFor(model => model.First().Name)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sort="@ViewData["AgeSort"]"
                   asp-route-searchName="@ViewData["SearchName"]"> @Html.DisplayNameFor(model => model.First().Age)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sort="@ViewData["EmailSort"]"
                   asp-route-searchName="@ViewData["SearchName"]"> @Html.DisplayNameFor(model => model.First().Email)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sort="@ViewData["ActiveSort"]"
                   asp-route-searchName="@ViewData["SearchName"]">@Html.DisplayNameFor(model => model.First().Active)</a>
            </th>
            <th>
                @SharedLocalizer["Actions"]
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Active)
                </td>
                <td>
                    <partial name="_CRUD_actions" model="item.ID" />
                </td>
            </tr>
        }
    </tbody>
</table>
 <nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item @prevDisabled">
            <a asp-action="Index"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-searchName="@ViewData["SearchName"]"
               asp-route-sort="@ViewData["Sort"]"
               class="page-link">@SharedLocalizer["Previous"]</a>
        </li>

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item">
                <a asp-action="Index" 
                    asp-route-pageNumber="@i" 
                    asp-route-searchName="@ViewData["SearchName"]"
                    asp-route-sort="@ViewData["Sort"]"
                    class="page-link">@i</a>
                </li>
        }

        <li class="page-item @nextDisabled">
            <a asp-action="Index"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-searchName="@ViewData["SearchName"]"
               asp-route-sort="@ViewData["Sort"]"
               class="page-link">@SharedLocalizer["Next"]</a>
        </li>
    </ul>
</nav>
*@
@(
Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(Model => Model.Name).Titled(SharedLocalizer["Name"]);
        columns.Add(Model => Model.Age).Titled(SharedLocalizer["Age"]);
        columns.Add(Model => Model.Email).Titled(SharedLocalizer["Email"]);
        columns.Add(Model => Model.Active)
                .Titled(SharedLocalizer["Active"])
                .RenderedAs(Model => Model.Active == true ? SharedLocalizer["Yes"].Value : SharedLocalizer["No"].Value)
                .UsingFilterOptions(new []
                {
                    new SelectListItem { Value="true", Text=SharedLocalizer["Yes"].Value},
                    new SelectListItem { Value="false", Text=SharedLocalizer["No"].Value}
                });

        
        columns.Add(Model => Html.ActionLink(SharedLocalizer["Edit"].Value, "Edit", new { id = Model.ID }));
        columns.Add(Model => Html.ActionLink(SharedLocalizer["Details"].Value, "Details", new { id = Model.ID }));
        columns.Add(Model => Html.ActionLink(SharedLocalizer["Delete"].Value, "Delete", new { id = Model.ID }));

    })
    .Filterable()
    .Pageable(pager =>
    {
        pager.PageSizes = new Dictionary<Int32, string> { { 0, "All" }, { 2, "2" }, { 3, "3" }, { 4, "4" } };
        pager.ShowPageSizes = true;
        pager.PagesToDisplay = 3;
        pager.RowsPerPage = 3;

    })
)